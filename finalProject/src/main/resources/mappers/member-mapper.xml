<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.spring.project.memberMapper">
	<!-- namespace : dao클래스의 sqlSession과 연결하기 위한 키로 사용. 내가 정의하기 나름이고 양쪽이 서로 
		매칭되어서 같기만 하면됨 mapper 태그 <insert>, <select>, <update>, <delete> dao - sqlSession의 
		함수(insert, selectOne, selectList update, delete)와 매핑되어 쿼리를 수행 id : 식별자로 구분하여 
		dao 클래스의 sqlSession 특정 함수와 연결하기 위해 사용 ${key 이름} : mybatis-config.xml의 property-name과 
		매칭. DB 테이블의 컬럼 #{key 이름} : dao 클래스의 sqlSession에서 파라미터로 전송받은 인스턴스(VO등) getter로 
		매핑된 데이터(입력받은 데이터) resultType : 검색 관련 SQL 구문이 실행되면 ResultSet이 리턴되며, ResultSet에 
		저장된 검색 결과를 어떤 자바 객체에 매핑할지 지정할 때 사용하는 속성 -->

	<insert id="insert">
		insert into ${SPRING_BOARD} (${boardTitle},
		${boardContent}, ${memberId})
		values (#{boardTitle}, #{boardContent},
		#{memberId})
		#{boardTitle} : 변수명이 아니라 getBoardTitle 의 리턴값을 들고오는 거임
	</insert>

	<select id="select_all_memberid" resultType="BoardVO">
		BoardVO 한줄씩 가져와서 sqlSession.selectList의 메소드에서 List를 뱉어내나?
		select * from
		${SPRING_BOARD}
		order by ${boardId} DESC
	</select>

	<select id="select_by_memberid" resultType="BoardVO">
		select * from
		${SPRING_BOARD}
		where ${memberId} like #{memberId}
	</select>
	
	<update id="update"> update시 날짜는 트리거로 자동변경
		update ${SPRING_BOARD}
		set
		${boardTitle} = #{boardTitle}, ${boardContent} = #{boardContent}
		where
		${boardId} = #{boardId}
	</update>

	<delete id="delete"> <!-- 있지만 안씀 -->
		delete from ${SPRING_BOARD}
		where ${boardId} =
		#{boardId}
	</delete>



</mapper>