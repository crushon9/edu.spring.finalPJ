<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.spring.project.movieMapper">

	<insert id="insert">
		insert into ${PJ_MOVIE}
		(${mvTitle}, ${mvImage}, ${mvDateStarted}, ${mvDateEnded}, ${mvRunningTime},
		${mvGenre}, ${mvInfo})
		values (#{mvTitle}, #{mvImage}, #{mvDateStarted}, #{mvDateEnded}, #{mvRunningTime}, 
		#{mvGenre}, #{mvInfo})
	</insert>

	<select id="select_one_by_mv_id" resultType="MovieVO">
		select * from ${PJ_MOVIE}
		where ${mvId} = #{mvId}
	</select>

	<!-- order by ticketSales -->
	<select id="select_list_by_mv_order_ticket" resultType="MovieVO">
		select * from
		${PJ_MOVIE}
		order by ${mvTicketSales} desc
	</select>

	<!-- order by ReviewAvg -->
	<select id="select_list_by_mv_order_review" resultType="MovieVO">
		select * from
		${PJ_MOVIE}
		order by ${mvRatingAvg} desc
	</select>

	<!-- search by period -->
	<select id="select_list_by_period" resultType="MovieVO">
		select * from
		${PJ_MOVIE}
		where ${mvDateStarted} <![CDATA[<=]]> #{inputDateStarted} 
		and #{inputDateEnded} <![CDATA[<=]]> ${mvDateEnded}
	</select>

	<!-- search by date -->
	<select id="select_list_by_date" resultType="MovieVO">
		select * from
		${PJ_MOVIE}
		where #{inputDate} BETWEEN ${mvDateStarted} and
		${mvDateEnded}
	</select>

	<!-- search by String / keyword-->
	<select id="select_list_by_search_mv_title" resultType="MovieVO">
		select * from
		${PJ_MOVIE}
		where ${mvTitle} like '%' || #{searchMvTitle} || '%'
		order by ${mvTicketSales} desc
	</select>

	<update id="update">
		update ${PJ_MOVIE}
		set ${mvTitle} = #{mvTitle},
		${mvImage} = #{mvImage},
		${mvDateStarted} = #{mvDateStarted},
		${mvDateEnded} = #{mvDateEnded},
		${mvRunningTime} = #{mvRunningTime},
		${mvGenre} = #{mvGenre}, ${mvInfo} = #{mvInfo}
		where ${mvId} = #{mvId}
	</update>
	
	<delete id="delete">
		delete from ${PJ_MOVIE}
		where ${mvId} = #{mvId}
	</delete>
	
<!-- mvRating 관련 쿼리 ========================================== -->
	<!-- mvRatingTotal + amount(삭제 -1, 등록 +1), mvRatingCnt + amount(삭제 -1, 등록 +1) -->
	<update id="update_ratingTC_by_mv_id">
		update ${PJ_MOVIE}
		set ${mvRatingTotal} = ${mvRatingTotal} + #{rvRating},
		${mvRatingCnt} = ${mvRatingCnt} + #{amount}
		where ${mvId} = #{mvId}
	</update>
	
	<!-- ratingAvg = ratingTotal / ratingCnt
	NVL & NULLIF -> 나누는 값(ratingCnt) 0일때 예외처리	-->
	<update id="update_ratingAVG_by_mv_id">
		update ${PJ_MOVIE}
		set ${mvRatingAvg} = NVL(${mvRatingTotal} / NULLIF(${mvRatingCnt}, 0), 0)
		where ${mvId} = #{mvId}
	</update>
	
	<!-- 평균평점 변경시 평점만 가져오는 쿼리 -->
	<select id="select_ratingAVG_by_mv_id" resultType="Float">
		select ${mvRatingAvg} from ${PJ_MOVIE}
		where ${mvId} = #{mvId}
	</select>
<!--============================================================-->	

<!-- ticketSales 관련 쿼리 ========================================== -->
	<!-- ticketSales + amount(취소 -1, 결제 +1) -->
	<update id="update_ticketsales_by_mv_id">
		update ${PJ_MOVIE}
		set ${mvTicketSales} = ${mvTicketSales} + #{amount}
		where ${mvId} = #{mvId}
	</update>
	
	<!-- 각 영화마다 예매율을 구하기 위해 영화 전체 판매수를 sum하여 가져오기 --> 
	<select id="select_ticketsales_total" resultType="int">
		SELECT sum(${mvTicketSales}) FROM ${PJ_MOVIE}
	</select>
<!--============================================================-->	
	
</mapper>